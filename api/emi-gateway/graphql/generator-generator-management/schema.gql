type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type GeneratorGenerator {
  "Generator ID"
  id: ID!
  "name"
  name: String!
  "organization id"
  organizationId: String!
  "Generator description"
  description: String
  "Generator active flag"
  active: Boolean!  
  "object metadata"
  metadata: GeneratorGeneratorMetadata
}

type GeneratorGeneratorMetadata {
    createdBy: String
		createdAt: BigInt
		updatedBy: String
		updatedAt: BigInt
}

type GeneratorGeneratorListing {
  "Listing"
  listing: [GeneratorGenerator]
  "query total result count"
  queryTotalResultCount: Int,  
}


input GeneratorGeneratorFilterInput {
  "Name"
  name: String
  "organization id"
  organizationId: String!
  "Generator active flag"
  active: Boolean
}

input GeneratorGeneratorPaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "query total result count flag"
  queryTotalResultCount: Boolean
}

input GeneratorGeneratorSortInput {
  field: String!,
  asc: Boolean!,
}

input GeneratorGeneratorInput {
  "name"
  name: String
  "organization id"
  organizationId: String!
  "Generator description"
  description: String
  "Generator active flag"
  active: Boolean
}


type VehicleVehicle {
  "Vehicle ID"
  id: ID!
  "Vehicle type"
  type: String!
  "Power source"
  powerSource: String!
  "Horsepower"
  hp: Int!
  "Year"
  year: Int!
  "Top speed"
  topSpeed: Int!
  "Timestamp"
  timestamp: BigInt!
}

type VehicleVehicleListing {
  "Listing"
  listing: [VehicleVehicle]
  "query total result count"
  queryTotalResultCount: Int,  
}

input VehicleVehicleFilterInput {
  "Type"
  type: String
  "Power source"
  powerSource: String
  "Year"
  year: Int
}

input VehicleVehiclePaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "query total result count flag"
  queryTotalResultCount: Boolean
}

input VehicleVehicleSortInput {
  field: String!,
  asc: Boolean!,
}

type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type Query {
  "Get Generators filtered "
  GeneratorGeneratorListing(filterInput: GeneratorGeneratorFilterInput, paginationInput: GeneratorGeneratorPaginationInput, sortInput: GeneratorGeneratorSortInput): GeneratorGeneratorListing
  "Get Generator by its id"
  GeneratorGenerator(id: ID!, organizationId: String!): GeneratorGenerator
  "Get Vehicles filtered "
  VehicleVehicleListing(filterInput: VehicleVehicleFilterInput, paginationInput: VehicleVehiclePaginationInput, sortInput: VehicleVehicleSortInput): VehicleVehicleListing
  "Get Vehicle by its id"
  VehicleVehicle(id: ID!): VehicleVehicle
}

type Mutation {
  "Create a new Generator"
  GeneratorCreateGenerator(input: GeneratorGeneratorInput!): GeneratorGenerator
  "Update an Generator"
  GeneratorUpdateGenerator(id: ID!, input: GeneratorGeneratorInput!, merge: Boolean!): GeneratorGenerator  
  "Deletes an Generator"
  GeneratorDeleteGenerators(ids: [ID]!): CommandResponse  
  "Start vehicle generation"
  VehicleStartGeneration: CommandResponse
  "Stop vehicle generation"
  VehicleStopGeneration: CommandResponse
}


type Subscription {
  "This events is triggered when a generator updated or deleted"
  GeneratorGeneratorModified(id: ID!): GeneratorGenerator
  "This events is triggered when a vehicle is generated"
  VehicleVehicleGenerated: VehicleVehicle
}
